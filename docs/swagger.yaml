definitions:
  core.resp:
    properties:
      status:
        example: pong
        type: string
    type: object
  dto.K8sDeploymentCreate:
    properties:
      containerPort:
        items:
          $ref: '#/definitions/k8s.containerPort'
        type: array
      cpu:
        type: string
      httpHealthCheck:
        $ref: '#/definitions/k8s.httpHealthCheck'
      image:
        type: string
      imagePullSecret:
        type: string
      label:
        additionalProperties:
          type: string
        type: object
      memory:
        type: string
      name:
        type: string
      namespace:
        type: string
      replicas:
        type: integer
    required:
    - image
    - name
    - namespace
    type: object
  dto.K8sIngressSimpleCreate:
    properties:
      annotations:
        additionalProperties:
          type: string
        type: object
      ingressClassName:
        type: string
      name:
        type: string
      namespace:
        type: string
      rule:
        $ref: '#/definitions/k8s.ruleConfig'
      tls:
        items:
          $ref: '#/definitions/k8s.tlsConfig'
        type: array
    required:
    - name
    - namespace
    - rule
    type: object
  dto.SystemLogin:
    properties:
      mobile:
        type: string
      password:
        type: string
    required:
    - mobile
    - password
    type: object
  dto.SystemRegister:
    properties:
      email:
        type: string
      mobile:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - mobile
    - password
    - username
    type: object
  httputil.PageResp:
    properties:
      items: {}
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
    type: object
  httputil.PageResponseBody:
    properties:
      data:
        $ref: '#/definitions/httputil.PageResp'
      msg:
        type: string
      status:
        type: string
    type: object
  httputil.ResponseBody:
    properties:
      data: {}
      msg:
        type: string
      status:
        type: string
    type: object
  k8s.containerPort:
    properties:
      name:
        type: string
      port:
        type: integer
      protocol:
        type: string
    type: object
  k8s.httpHealthCheck:
    properties:
      httpHealthPath:
        type: string
      httpHealthPort:
        description: 默认使用容器的0号端口
        type: string
    required:
    - httpHealthPath
    type: object
  k8s.ruleConfig:
    properties:
      hosts:
        items:
          type: string
        type: array
      path:
        type: string
      service:
        type: string
      servicePort:
        type: integer
    required:
    - service
    type: object
  k8s.tlsConfig:
    properties:
      host:
        items:
          type: string
        type: array
      secretName:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    name: SoulChild
    url: http://soulchild.cn
  description: This is a sample server celler server.
  title: Swagger Example API
  version: 0.0.1
paths:
  /api/v1/k8s/deployment:
    put:
      description: 使用原生 deployment api 对象更新
      parameters:
      - description: Deployment Api Object
        in: body
        name: deploymentName
        required: true
        schema:
          type: object
      - description: Authorization token
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 使用原生 deployment api 对象更新
      tags:
      - K8s
      - Deployment
  /api/v1/k8s/deployment/:
    post:
      consumes:
      - application/json
      description: 创建 Deployment
      parameters:
      - description: Authorization token
        in: header
        name: x-token
        required: true
        type: string
      - description: Deployment对象
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.K8sDeploymentCreate'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回
          schema:
            $ref: '#/definitions/httputil.ResponseBody'
      summary: 创建 Deployment
      tags:
      - K8s
      - Deployment
  /api/v1/k8s/deployment/{namespace}:
    get:
      description: 获取Deployment列表
      parameters:
      - description: Namespace 不填为全部
        in: path
        name: namespace
        type: string
      - description: Authorization token
        in: header
        name: x-token
        required: true
        type: string
      - description: 根据Deployment名字模糊查询
        in: query
        name: filter
        type: string
      - description: 一页获取多少条数据,默认十条
        in: query
        name: limit
        type: string
      - description: 获取第几页的数据,默认第一页
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回Deployment列表
          schema:
            $ref: '#/definitions/httputil.PageResponseBody'
      summary: 获取Deployment列表
      tags:
      - K8s
      - Deployment
  /api/v1/k8s/deployment/{namespace}/{deploymentName}:
    delete:
      description: 删除 Deployment
      parameters:
      - description: deployment名称
        in: path
        name: deploymentName
        required: true
        type: string
      - description: Namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: 是否强制删除
        in: query
        name: force
        type: boolean
      - description: Authorization token
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回
          schema:
            $ref: '#/definitions/httputil.ResponseBody'
      summary: 删除 Deployment
      tags:
      - K8s
      - Deployment
    get:
      description: 获取Deployment信息
      parameters:
      - description: deployment名称
        in: path
        name: deploymentName
        required: true
        type: string
      - description: Namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: Authorization token
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回Deployment信息
          schema:
            $ref: '#/definitions/httputil.ResponseBody'
      summary: 获取Deployment信息
      tags:
      - K8s
      - Deployment
  /api/v1/k8s/deployment/{namespace}/{deploymentName}/image:
    put:
      description: 修改 Deployment 容器镜像
      parameters:
      - description: Deployment名称
        in: path
        name: deploymentName
        required: true
        type: string
      - description: Namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: 新的容器镜像,只更新第一个容器时 name参数可忽略
        in: body
        name: container
        required: true
        schema:
          items:
            properties:
              image:
                type: string
              name:
                type: string
            required:
            - image
            type: object
          type: array
      - description: Authorization token
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 修改 Deployment 容器镜像
      tags:
      - K8s
      - Deployment
  /api/v1/k8s/deployment/{namespace}/{deploymentName}/pods:
    get:
      description: 获取 Deployment 管理的 Pod 信息
      parameters:
      - description: Deployment名称
        in: path
        name: deploymentName
        required: true
        type: string
      - description: Namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: Authorization token
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 获取 Deployment 管理的 Pod 信息
      tags:
      - K8s
      - Deployment
  /api/v1/k8s/deployment/{namespace}/{deploymentName}/restart:
    put:
      description: 重启 Deployment 管理的 Pod
      parameters:
      - description: Deployment名称
        in: path
        name: deploymentName
        required: true
        type: string
      - description: Namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: Authorization token
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 重启 Deployment 管理的 Pod
      tags:
      - K8s
      - Deployment
  /api/v1/k8s/deployment/{namespace}/{deploymentName}/scale:
    put:
      description: 修改 Deployment 副本数
      parameters:
      - description: Deployment名称
        in: path
        name: deploymentName
        required: true
        type: string
      - description: Namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: 副本数
        in: body
        name: replicas
        required: true
        schema:
          type: integer
      - description: Authorization token
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 修改 Deployment 副本数
      tags:
      - K8s
      - Deployment
  /api/v1/k8s/ingress/:
    post:
      description: 创建简单 Ingress
      parameters:
      - description: Authorization token
        in: header
        name: x-token
        required: true
        type: string
      - description: K8sIngressSimpleCreate 对象
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.K8sIngressSimpleCreate'
      produces:
      - application/json
      - application/json
      responses:
        "200":
          description: 成功返回
          schema:
            $ref: '#/definitions/httputil.ResponseBody'
      summary: 创建简单 Ingress
      tags:
      - K8s
      - Ingress
  /api/v1/k8s/ingress/{namespace}:
    get:
      description: 获取 Ingress 列表
      parameters:
      - description: Namespace 不填为全部
        in: path
        name: namespace
        type: string
      - description: Authorization token
        in: header
        name: x-token
        required: true
        type: string
      - description: 根据 Ingress 名字模糊查询
        in: query
        name: filter
        type: string
      - description: 一页获取多少条数据,默认十条
        in: query
        name: limit
        type: string
      - description: 获取第几页的数据,默认第一页
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回 Ingress 列表
          schema:
            $ref: '#/definitions/httputil.PageResponseBody'
      summary: 获取 Ingress 列表
      tags:
      - K8s
      - Ingress
  /api/v1/k8s/ingress/{namespace}/{ingressName}:
    get:
      description: 获取 Ingress 信息
      parameters:
      - description: ingress名称
        in: path
        name: ingressName
        required: true
        type: string
      - description: Namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: Authorization token
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回 Ingress 信息
          schema:
            $ref: '#/definitions/httputil.ResponseBody'
      summary: 获取 Ingress 信息
      tags:
      - K8s
      - Ingress
  /api/v1/k8s/pod/{namespace}:
    get:
      description: 获取Pod列表
      parameters:
      - description: Namespace 不填为全部
        in: path
        name: namespace
        type: string
      - description: Authorization token
        in: header
        name: x-token
        required: true
        type: string
      - description: 根据Pod名字模糊查询
        in: query
        name: filter
        type: string
      - description: 一页获取多少条数据,默认十条
        in: query
        name: limit
        type: string
      - description: 获取第几页的数据,默认第一页
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回Pod列表
          schema:
            $ref: '#/definitions/httputil.PageResponseBody'
      summary: 获取Pod列表
      tags:
      - K8s
  /api/v1/k8s/pod/{namespace}/{podName}:
    delete:
      description: 删除Pod
      parameters:
      - description: Pod名称
        in: path
        name: podName
        required: true
        type: string
      - description: Namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: Authorization token
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回
      summary: 删除Pod
      tags:
      - K8s
    get:
      description: 获取Pod信息
      parameters:
      - description: Pod名称
        in: path
        name: podName
        required: true
        type: string
      - description: Namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: Authorization token
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回Pod信息
          schema:
            $ref: '#/definitions/httputil.ResponseBody'
      summary: 获取Pod信息
      tags:
      - K8s
  /api/v1/k8s/pod/{namespace}/{podName}/containers:
    get:
      description: 获取Pod容器信息
      parameters:
      - description: Pod名称
        in: path
        name: podName
        required: true
        type: string
      - description: Namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: Authorization token
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 获取Pod容器信息
      tags:
      - K8s
  /api/v1/k8s/pod/{namespace}/{podName}/log:
    get:
      description: 获取Pod日志
      parameters:
      - description: Pod名称
        in: path
        name: podName
        required: true
        type: string
      - description: Namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: 容器名,默认第1个容器
        in: query
        name: containerName
        type: string
      - description: 查看最后多少行日志,默认200
        in: query
        name: line
        type: integer
      - description: Authorization token
        in: header
        name: x-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回Pod日志
      summary: 获取Pod日志
      tags:
      - K8s
  /api/v1/system/user/info:
    get:
      description: 用户信息
      parameters:
      - description: Authorization token
        in: header
        name: X-Token
        required: true
        type: string
      responses:
        "200":
          description: 成功返回用户信息
          schema:
            $ref: '#/definitions/httputil.ResponseBody'
      summary: 用户信息
      tags:
      - User
  /api/v1/system/user/login:
    post:
      consumes:
      - application/json
      description: 用户登录
      parameters:
      - description: 手机号,密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SystemLogin'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回token
          schema:
            $ref: '#/definitions/httputil.ResponseBody'
      summary: 用户登录
      tags:
      - User
  /api/v1/system/user/register:
    post:
      consumes:
      - application/json
      description: 用户注册
      parameters:
      - description: 用户信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SystemRegister'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回
          schema:
            $ref: '#/definitions/httputil.ResponseBody'
      summary: 用户注册
      tags:
      - User
  /ping:
    get:
      description: do ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.resp'
      summary: health check
      tags:
      - core
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: x-token
    type: apiKey
swagger: "2.0"
